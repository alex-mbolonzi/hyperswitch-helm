# Configuration values used for the deployment of the application
application:
  # The is the configuration that is globally common for all the application related deployments
  global:
    # Number of replicas to be used for the application by default (for server and consumer)
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32
    # Annotations that are to be added the the deployments
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the all the deployments and their pods
    labels:
      managedBy: hyperswitch

    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn:
    # Environmant variables that are to be used by the hyperswitch application services
    env:
      pod_name:
        name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name

    configMap: |
      [server]
      host = 0.0.0.0

    # secrets to be used by the hyperswitch application
    secrets:

  server:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-server
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn: my-role-arn
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: router
      host: hyperswitch
    secrets:
      kms_admin_api_key: test_admin
      kms_jwt_secret: test_admin
      admin_api_key: test_admin
      jwt_secret: test_admin
      recon_admin_api_key: test_admin
      kms_key_id: kms_key_id
      kms_key_region: us-east-1
      # these are only test keys, please change it when deploying to production or other environments
      kms_jwekey_vault_encryption_key: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsgwEJaGbRA1DNMzubq4M
        7d+i6TSrFPiqrqnNkO0Dct58jGbJ36xIOxfsf7qa03kP+idEZnh0w9kWcVmx4aL+
        nqeDzQtZ8RQdBMg2lJl4srDjxdKTABdeMq3c6W+tyXG1E/vz2qik0ROp65JkxlTS
        T1e4wWC9IwpmaNAFtjW9oFc48K6Ou7SZOl/hAm5QJPUxsY1lFbbVwQD6pbRRhLas
        zrGRFqczQVhtCz6ZsJWSpSwfpZAhNKlBHatkuojY4yLw/Qey3xaCR83fn2hCaoXO
        ++9ffcbPIwxb7XTkbc25kJT+bOuN5ttnmAPRDV1l5hR432fiSqNIo015gTy83Nv2
        LwIDAQAB
        -----END PUBLIC KEY-----
      # these are only test keys, please change it when deploying to production or other environments
      kms_jwekey_vault_private_key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEAsSnWltGc6kjcDAhtUoad0xlLJZCwLc6P80j8k3dgo92nqocU
        KD7tsY61dgm3gKFr8sZPLbTaDV1SJ+jAeZNP476aonJVPottQvGduB5DqDCMcHDQ
        krYkBtOb+/ID5qOi8ATVVMfJASjVbw/D0R/AEuiG0vmddl+8676xWIT8TZTmzowI
        vvUIYEuaUS8DRpmTAWPXYdv72fDZtuyhpU0YGAdHGyQrHXwGdGe31N65vmqMyWoi
        IXGMuJKqP/EZEqmVkkfWXuDioa57YrPUU07oD7KsS00L4QGBB3MeJxEpQjhmNybj
        QeDejl4YPj3dboFyf6468skKS91+wV0ExghyTwIDAQABAoIBAGG7G8a9QVu477Kv
        n2csHbpLNLo3VAkg7yYdOEA9VZFwAENBGuyMsmEFwbKo75LE+aDGpv0mzDcdKOod
        KrimfCa9id5dRgsnrRGF6iSchWQty/tnMJgOZFdjuqPEwUQlNwhDElAfmhHKrdsD
        jlk5s6J6pY2S57taWwSNgJW9XtWIiCvI+VXxSqK7KDjGwDko8Kv86/Gck87IBxa5
        5OqDlvOsPSqTQpqT3BqFu7PSh/dPGZ90u2Yyvsns4EnBpVkxmxPKDddv/b2PkwnC
        /gVoctmrZ+YRkXN/07L34TSJzdWVZis0+w7DydhIz/n1ueYIX7D1Ef7uHWi709AJ
        HLnBvDkCgYEA5N3RG6993ef/zH7Ir+k4iwlUTkXI8YAEY2Vavpk21cG60kTwzhUN
        KbjsLJRuX5N3soWxhlrXX+V7ihTSCXbO0mFpOQwW66XBKZyV3i5NllpS3+ldiyfO
        FxjYgJVZsnXpJX3c4R4HwZ6qja4oKZabsqypg7BaIgGJMArkZUHJDYsCgYEAxirQ
        kmN6MUZMa52gBZLGnAiXNVZj0yUmaDU5hLJlLHu00Ut80hOC9d4Ekv6R0Y/aSC3h
        eVzPkrkFOSySytifyGK0cU+3ielJncIGJHraIYkWdM0aex1jX0Ms77hfMlCYcagJ
        5uwiwFSNNboOWnm9P3M/1enJAsuw1MzFFBtBDs0CgYEA4N1MIh6H1Wqnur1q4uOL
        iZft/EW2jAlSxnID+bbB2L3Sl9vimSi32SF28soXs9JJTd7rsG06pV7sxZt1TpUr
        2iqZXtKRBpDCO+c8nKLz2mD+gj9giGPgqnLf7V5QVfZhz1NdnNWLm2IQgsn1bf8r
        FR9uIhQ4Sqclqk1ZYF+FcccCgYAYeitfGZh7Q6Km3EZqydFsboc22F/mMb2Hu6NK
        J7rlfrY77+YQEMbpVa4c9gLO7sTYi4pBMlyVU/M4N7A+C/nYh5CgOmeCSmWEbfXS
        RbZx0/wJG1h9AolGuAZx6cUgcuIRj98BPgOg3BDBJSUmucjNcI/e/UyN4tkJv+1L
        6X3ktQKBgQDMa06pjBgpRq8BJhcxs1mluPgHGad1lBzU5IcVX1oRFyux8PtsfSoA
        kIYrGckStjrvfOD2VnTIQWAuujOTtxjP0yR+cHlmwWXZrrj5+x8kNAOqgN7gU1nt
        KYpNT2+Sc7wxwAWIucVSN3eRNzRGTysxUWYKFUlpGRKP6NwJDEz9ew==
        -----END RSA PRIVATE KEY-----
      kms_jwekey_tunnel_private_key: dummy_val
      kms_jwekey_rust_locker_encryption_key: dummy_val
      kms_connector_onboarding_paypal_client_id: dummy_val
      kms_connector_onboarding_paypal_client_secret: dummy_val
      kms_connector_onboarding_paypal_partner_id: dummy_val
      redis_temp_locker_encryption_key: dummy_val
      apple_pay_merchant_cert: dummy_val
      apple_pay_merchant_cert_key: dummy_val
      apple_pay_ppc: dummy_val
      apple_pay_ppc_key: dummy_val
      apple_pay_merchant_conf_merchant_cert: dummy_val
      apple_pay_merchant_conf_merchant_cert_key: dummy_val
      apple_pay_merchant_conf_merchant_id: dummy_val
      forex_api_key: dummy_val
      forex_fallback_api_key: dummy_val
      pm_auth_key: dummy_val
      api_hash_key: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
    master_enc_key: 471f22516724347bcca9c20c5fa88d9821c4604e63a6aceffd24605809c9237c
    locker:
      host: http://hyperswitch-vault
      host_rs: 
      mock_locker : false                                                    # Emulate a locker locally using Postgres
      locker_signing_key_id : "1"                                           # Key_id to sign basilisk hs locker
      locker_enabled : true                                                 # Boolean to enable or disable saving cards in locker
      
      locker_public_key: 
      hyperswitch_private_key: 
    basilisk:
      host: basilisk-host
    server_base_url: https://sandbox.hyperswitch.io
    opensearch:
      host: https://localhost:9200
    run_env: sandbox
    secrets_manager: no_encryption
    encryption_manager: no_encryption
    payment_link: 
      sdk_url: http://localhost:9090/0.35.4/v0/HyperLoader.js
  consumer:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-consumer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn:
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: consumer

  producer:
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-producer
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn:
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: producer

  controlCenter:
    # Image to be used by the deployment to create the pod
    image: juspaydotin/hyperswitch-control-center:v1.30.0
    # Number of replicas to be used for the application
    replicas: 1
    # Wait time allowed for the deployment before the deployment is marked as failed
    progressDeadlineSeconds: 600
    # The strategy that can be used to replace the old pods by new ones
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    # Specify affinity for nodes to which the pods should start on
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-type
                operator: In
                values:
                  - generic-compute
    # The time kubernetes will wait after sending the termination signal to the pods
    terminationGracePeriodSeconds: 30
    # Annotations that are to be added to the pods (extends global configuration)
    podAnnotations:
      traffic_sidecar_istio_io_excludeOutboundIPRanges: 10.23.6.12/32
    # Annotations that are to be added the the deployments (extends global configuration)
    annotations:
      deployment.kubernetes.io/revision: "1"
    # Labels to be added to the deployment's (match labels) and their pods (extends global configuration)
    labels:
      app: hyperswitch-control-center
    # service account annotations to be used
    serviceAccountAnnotations:
      eks.amazonaws.com/role-arn:
    # Environmant variables that are to be used by the hyperswitch application service this will extend the existing global configuration
    env:
      binary: dashboard
      host: hyperswitch-control-center

# configuration values to be used by the service that is connected to the hyperswitch server
services:
  router:
    version: v1.110.0
    image: juspaydotin/hyperswitch-router:v1.110.0-standalone
    host: http://localhost:8080
  consumer:
    image: juspaydotin/hyperswitch-consumer:v1.110.0-standalone
  producer:
    image: juspaydotin/hyperswitch-producer:v1.110.0-standalone
  controlCenter:
    image: juspaydotin/hyperswitch-control-center:v1.32.0
  sdk:
    host: http://localhost:9090
    version: 0.80.0
    subversion: v0
redis:
  # - enable Bitnami redis sub-chart helm installation
  enabled: true
  master:
    count: 1
  replica:
    replicaCount: 0
  auth:
    enabled: false
    sentinel: false

externalRedis:
  # - Link this service to an external Redis server
  enabled: false
  host: redis-ext-master
  auth:
    enabled: true
    username: ""
    password: ""

redisMiscConfig:
  checkRedisIsUp:
    initContainer:
      enable: true
      image: redis:7.2.4
      maxAttempt: 30

postgresql:
  enabled: true
  global:
    image:
      registry: docker.io
      repository: bitnami/postgresql
      tag: 16.4.0-debian-12-r6
  postgresql:
    auth:
      username: hyperswitch
      password: qovery.env.HYPERSWITCH_DB_PASSWORD
      database: hyperswitch
  architecture: replication
  replication:
    synchronousCommit: "off"
    numSynchronousReplicas: 0
  auth:
    replicationUsername: hyperswitch
    replicationPassword: qovery.env.HYPERSWITCH_DB_PASSWORD
    database: hyperswitch
  primary:
    name: ""
    resources:
      requests:
        cpu: 150m
  readReplicas:
    replicaCount: 1
    resources:
      requests:
        cpu: 100m

externalPostgresql:
  # - Link this service to an external Postgres server
  enabled: false
  primary:
    host: "postgresql-ext"
    auth:
      username: "hyperswitch"
      password: "hyperswitch"
      plainpassword: 
      database: "hyperswitch"
  readOnly:
    enabled: false
    host: "postgres-service"
    auth:
      username: "hyperswitch"
      password: "hyperswitch"
      plainpassword: 
      database: "hyperswitch"

initDB:
  enable: true
  checkPGisUp:
    image: postgres:16-alpine3.19
    maxAttempt: 30
  migration:
    image: christophwurst/diesel-cli:latest

loadBalancer:
  targetSecurityGroup: "loadBalancer-sg"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80

hyperswitch-card-vault:
  enabled: false


